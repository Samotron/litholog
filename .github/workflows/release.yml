name: Release CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-linux
            artifact_name: litholog
            asset_name: litholog-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-linux
            artifact_name: litholog
            asset_name: litholog-linux-aarch64
          - os: windows-latest
            target: x86_64-windows
            artifact_name: litholog.exe
            asset_name: litholog-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-macos
            artifact_name: litholog
            asset_name: litholog-macos-x86_64
          - os: macos-latest
            target: aarch64-macos
            artifact_name: litholog
            asset_name: litholog-macos-aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Setup Zig
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.14.0

    - name: Extract version from Zig source
      id: version
      run: |
        VERSION=$(grep 'VERSION_STRING' src/version.zig | sed 's/.*"\([^"]*\)".*/\1/')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Validate version matches tag
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        ZIG_VERSION=${{ steps.version.outputs.VERSION }}
        if [ "$TAG_VERSION" != "$ZIG_VERSION" ]; then
          echo "❌ Tag version ($TAG_VERSION) does not match Zig version ($ZIG_VERSION)"
          echo "Please update src/version.zig to match the tag or use the correct tag"
          exit 1
        fi
        echo "✅ Version validation passed: $ZIG_VERSION"

    - name: Build binary
      run: |
        zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseFast

    - name: Prepare artifact
      shell: bash
      run: |
        cp zig-out/bin/${{ matrix.artifact_name }} ${{ matrix.asset_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -la artifacts/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## Litholog ${{ github.ref_name }}
          
          Geological description parser CLI tool.
          
          ### Changes
          See the [changelog](CHANGELOG.md) for details.
          
          ### Installation
          
          #### Linux/macOS
          ```bash
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/litholog-linux-x86_64 -o litholog
          chmod +x litholog
          sudo mv litholog /usr/local/bin/
          ```
          
          #### Windows
          Download the Windows executable and add it to your PATH.
          
          ### Usage
          ```bash
          litholog "Firm CLAY"
          ```
          
          ### Language Bindings
          
          - **Go**: `go get github.com/${{ github.repository }}/bindings/go@${{ github.ref_name }}`
          - **Python**: `pip install litholog`

    - name: Upload Linux x86_64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/litholog-linux-x86_64/litholog-linux-x86_64
        asset_name: litholog-linux-x86_64
        asset_content_type: application/octet-stream

    - name: Upload Linux aarch64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/litholog-linux-aarch64/litholog-linux-aarch64
        asset_name: litholog-linux-aarch64
        asset_content_type: application/octet-stream

    - name: Upload Windows x86_64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/litholog-windows-x86_64.exe/litholog-windows-x86_64.exe
        asset_name: litholog-windows-x86_64.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS x86_64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/litholog-macos-x86_64/litholog-macos-x86_64
        asset_name: litholog-macos-x86_64
        asset_content_type: application/octet-stream

    - name: Upload macOS aarch64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/litholog-macos-aarch64/litholog-macos-aarch64
        asset_name: litholog-macos-aarch64
        asset_content_type: application/octet-stream